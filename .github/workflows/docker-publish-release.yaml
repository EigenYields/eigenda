name: docker-publish-release

on:
  push:
    tags:
      - v*
  pull_request:
  workflow_dispatch:
    inputs:
      force:
        description: 'Force untagged release (expert mode)'
        required: false
        default: false
        type: boolean

env:
  REGISTRY: ghcr.io
  CACHE-FROM: /tmp/.buildx-cache
  CACHE-TO: /tmp/.buildx-cache-new

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v1.1.1
        with:
          versionSpec: '5.x'

      - name: Determine SemVer
        uses: gittools/actions/gitversion/execute@v1.1.1
        with:
          useConfigFile: true

      - run: |
          echo "SemVer ${{ env.fullSemVer }} Forced ${{ github.event.inputs.force }}"
        name: Display SemVer

      - name: Log Environment Variables
        run: printenv

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
          use: true
          driver-opts: image=moby/buildkit:master

      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
        if: ${{ success() }}

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ success() }}

      - name: Build and push Docker images
        run: |
          docker buildx create --use
          docker buildx build --platform linux/amd64,linux/arm64 --build-arg SEMVER=${{ env.GitVersion_semVer }} --build-arg GITCOMMIT=${{env.shortSha}} --build-arg GITDATE=${{env.commitDate}} . -t ${{ env.REGISTRY }}/eigenyields/opr-node:${{ env.GitVersion_semVer }} -t ${{ env.REGISTRY }}/eigenyields/opr-node:${{ env.legacySemVer }} -f node/cmd/Dockerfile --push

      # # Build And Push Image
      # - name: Build docker image release
      #   run: make docker-release-build
      #   if: ${{ success() }}

      # # Publish if release is tagged or force == true
      # - name: Push docker image release
      #   run: make docker-release-push
      #   if: startsWith(github.ref, 'refs/tags/v') || github.event.inputs.force == 'true'
